name: CI Workflow

on: [push, pull_request]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: make -f Bootstrap.mak linux CONFIG=release
    - name: Test
      run: bin/release/premake5 test --test-all
    - name: Push SHA to Docker Hub
      uses: opspresso/action-docker@v0.2.13
      with:
        args: --docker
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
        PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKERFILE: Dockerfile
        IMAGE_NAME: premake
        TAG_NAME: ${{ github.run_number }}
        LATEST: false
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [debug, release]
        platform: [x64]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: make -f Bootstrap.mak linux CONFIG=${{ matrix.config }}
    - name: Test
      run: bin/${{ matrix.config }}/premake5 test --test-all
    - name: Upload Artifacts
      if: matrix.config == 'release'
      uses: actions/upload-artifact@v2
      with:
        name: premake-linux-${{ matrix.platform }}
        path: bin/${{ matrix.config }}/
  macosx:
    runs-on: macos-latest
    strategy:
      matrix:
        config: [debug, release]
        platform: [x64]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: make -f Bootstrap.mak macosx CONFIG=${{ matrix.config }}
    - name: Test
      run: bin/${{ matrix.config }}/premake5 test --test-all
    - name: Upload Artifacts
      if: matrix.config == 'release'
      uses: actions/upload-artifact@v2
      with:
        name: premake-macosx-${{ matrix.platform }}
        path: bin/${{ matrix.config }}/
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        config: [debug, release]
        platform: [Win32, x64]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
        nmake -f Bootstrap.mak MSDEV=vs2019 windows-msbuild PLATFORM=${{ matrix.platform }} CONFIG=${{ matrix.config }}
      shell: cmd
    - name: Test
      run: bin\${{ matrix.config }}\premake5 test --test-all
      shell: cmd
    - name: Upload Artifacts
      if: matrix.config == 'release'
      uses: actions/upload-artifact@v2
      with:
        name: premake-windows-${{ matrix.platform }}
        path: bin\${{ matrix.config }}\
